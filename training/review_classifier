#!/usr/bin/env python3
import amzn
import sys

REVIEW_CLASSES = ['p', 'n']
REVIEWS_PER_ITEM = 10
REVIEWS_FILE = "data.txt"


def classify(reviews, expected_class):
    """
    Classify each review in the review list and save to `data.txt`.

    Args:
        reviews: List of reviews.
        expected_class: Expected class (p/n).
    """
    # There ought to be a better way to do this
    prompt = '[{}/{}] '.format('P' if expected_class == 'p' else 'p',
                               'N' if expected_class == 'n' else 'n')

    for review in reviews:
        print(review)
        actual_class = input(prompt)
        print('\n-------\n')

        if not actual_class:
            actual_class = expected_class

        actual_class = actual_class.lower()
        with open(REVIEWS_FILE, 'a') as f:
            f.write(actual_class + '\t' + review + '\n')


def main():
    if len(sys.argv) < 2:
        print('usage: {} FILE'.format(sys.argv[0]), file=sys.stderr)
        sys.exit(1)

    asins = [line.strip() for line in open(sys.argv[1])]

    for asin in asins:
        for class_ in REVIEW_CLASSES:
            reviews = amzn.get_reviews(asin, REVIEWS_PER_ITEM/2, class_)
            classify(reviews, class_)


if __name__ == '__main__':
    main()
